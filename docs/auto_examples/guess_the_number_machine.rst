
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/guess_the_number_machine.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_guess_the_number_machine.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_guess_the_number_machine.py:


Guess the number machine
========================

An StateMachine for the well know game.

Well leave the machine imagine a number and also play the game. Why not?

.. GENERATED FROM PYTHON SOURCE LINES 10-83

.. code-block:: default

    import random

    from statemachine import State
    from statemachine import StateMachine


    class GuessTheNumberMachine(StateMachine):

        start = State("Start", initial=True)
        low = State("Low")
        high = State("High")
        won = State("Won", final=True)
        lose = State("Lose", final=True)

        guess = (
            lose.from_(low, high, cond="max_guesses_reached")
            | won.from_(low, high, cond="guess_is_equal")
            | low.from_(low, high, start, cond="guess_is_lower")
            | high.from_(low, high, start, cond="guess_is_higher")
        )

        def __init__(self, max_attempts=5, lower=1, higher=5, seed=42):
            self.max_attempts = max_attempts
            self.lower = lower
            self.higher = higher
            self.guesses = 0

            # lets play a not so random game, or our tests will be crazy
            random.seed(seed)
            self.number = random.randint(self.lower, self.higher)
            super().__init__()

        def max_guesses_reached(self):
            return self.guesses >= self.max_attempts

        def before_guess(self, number):
            self.guesses += 1
            print("You guess is {}...".format(number))

        def guess_is_lower(self, number):
            return number < self.number

        def guess_is_higher(self, number):
            return number > self.number

        def guess_is_equal(self, number):
            return self.number == number

        def on_enter_start(self):
            print("(psss.. don't tell anyone the number is {})".format(self.number))
            print(
                "I'm thinking of a number between {} and {}. Can you guess what it is?".format(
                    self.lower, self.higher
                )
            )

        def on_enter_low(self):
            print("Too low. Try again.")

        def on_enter_high(self):
            print("Too high. Try again.")

        def on_enter_won(self):
            print(
                "Congratulations, you guessed the number in {} guesses!".format(
                    self.guesses
                )
            )

        def on_enter_lose(self):
            print("Oh, no! You've spent all your {} attempts!".format(self.guesses))





.. image-sg:: /auto_examples/images/sphx_glr_guess_the_number_machine_001.svg
   :alt: guess the number machine
   :srcset: /auto_examples/images/sphx_glr_guess_the_number_machine_001.svg
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 84-87

Playing
-------


.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default


    sm = GuessTheNumberMachine(seed=103)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    (psss.. don't tell anyone the number is 4)
    I'm thinking of a number between 1 and 5. Can you guess what it is?




.. GENERATED FROM PYTHON SOURCE LINES 91-94

.. code-block:: default


    sm.guess(random.randint(1, 5))





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    You guess is 2...
    Too low. Try again.




.. GENERATED FROM PYTHON SOURCE LINES 95-98

.. code-block:: default


    sm





.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    GuessTheNumberMachine(model=Model(state=low), state_field='state', current_state='low')



.. GENERATED FROM PYTHON SOURCE LINES 99-102

.. code-block:: default


    sm.guess(random.randint(1, 5))





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    You guess is 1...
    Too low. Try again.




.. GENERATED FROM PYTHON SOURCE LINES 103-109

.. code-block:: default


    sm.guess(random.randint(1, 5))


    sm





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    You guess is 5...
    Too high. Try again.

    GuessTheNumberMachine(model=Model(state=high), state_field='state', current_state='high')



.. GENERATED FROM PYTHON SOURCE LINES 112-115

.. code-block:: default


    sm.guess(random.randint(1, 5))





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    You guess is 1...
    Too low. Try again.




.. GENERATED FROM PYTHON SOURCE LINES 116-119

.. code-block:: default


    sm.guess(random.randint(1, 5))





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    You guess is 4...
    Congratulations, you guessed the number in 5 guesses!




.. GENERATED FROM PYTHON SOURCE LINES 120-123

.. code-block:: default


    sm





.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    GuessTheNumberMachine(model=Model(state=won), state_field='state', current_state='won')



.. GENERATED FROM PYTHON SOURCE LINES 124-129

.. code-block:: default


    try:
        sm.guess(random.randint(1, 5))
    except Exception as e:
        print(e)




.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Can't guess when in Won.





.. _sphx_glr_download_auto_examples_guess_the_number_machine.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: guess_the_number_machine.py <guess_the_number_machine.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: guess_the_number_machine.ipynb <guess_the_number_machine.ipynb>`
