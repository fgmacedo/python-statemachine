
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/order_control_rich_model_machine.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_order_control_rich_model_machine.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_order_control_rich_model_machine.py:


Order control machine (rich model)
==================================

An StateMachine that demonstrates :ref:`Actions` being used on a rich model.

.. GENERATED FROM PYTHON SOURCE LINES 8-53

.. code-block:: default

    from statemachine import State
    from statemachine import StateMachine
    from statemachine.exceptions import AttrNotFound


    class Order:
        def __init__(self):
            self.order_total = 0
            self.payments = []
            self.payment_received = False

        def payments_enough(self, amount):
            return sum(self.payments) + amount >= self.order_total

        def add_to_order(self, amount):
            self.order_total += amount
            return self.order_total

        def on_receive_payment(self, amount):
            self.payments.append(amount)
            return self.payments

        def after_receive_payment(self):
            self.payment_received = True

        def wait_for_payment(self):
            self.payment_received = False


    class OrderControl(StateMachine):
        waiting_for_payment = State(
            "Waiting for payment", initial=True, enter="wait_for_payment"
        )
        processing = State("Processing")
        shipping = State("Shipping")
        completed = State("Completed", final=True)

        add_to_order = waiting_for_payment.to(waiting_for_payment, before="add_to_order")
        receive_payment = waiting_for_payment.to(
            processing, cond="payments_enough"
        ) | waiting_for_payment.to(waiting_for_payment, unless="payments_enough")
        process_order = processing.to(shipping, cond="payment_received")
        ship_order = shipping.to(completed)





.. image-sg:: /auto_examples/images/sphx_glr_order_control_rich_model_machine_001.svg
   :alt: order control rich model machine
   :srcset: /auto_examples/images/sphx_glr_order_control_rich_model_machine_001.svg
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 54-60

Testing
-------

Let's first try to create a statemachine instance, using the default dummy model that doesn't
have the needed methods to complete the state machine. Since the required methods will not be
found either in the state machine or in the model, an exception ``AttrNotFound`` will be raised.

.. GENERATED FROM PYTHON SOURCE LINES 60-68

.. code-block:: default


    try:
        control = OrderControl()
    except AttrNotFound as e:
        assert (  # noqa: PT017
            str(e) == "Did not found name 'payment_received' from model or statemachine"
        )








.. GENERATED FROM PYTHON SOURCE LINES 69-70

Now initializing with a proper ``order`` instance.

.. GENERATED FROM PYTHON SOURCE LINES 70-74

.. code-block:: default


    order = Order()
    control = OrderControl(order)








.. GENERATED FROM PYTHON SOURCE LINES 75-76

Send events to add to order

.. GENERATED FROM PYTHON SOURCE LINES 76-80

.. code-block:: default


    assert control.send("add_to_order", 3) == 3
    assert control.send("add_to_order", 7) == 10








.. GENERATED FROM PYTHON SOURCE LINES 81-82

Receive a payment of $4...

.. GENERATED FROM PYTHON SOURCE LINES 82-85

.. code-block:: default


    control.send("receive_payment", 4)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    [4]



.. GENERATED FROM PYTHON SOURCE LINES 86-87

Since there's still $6 left to fulfill the payment, we cannot process the order.

.. GENERATED FROM PYTHON SOURCE LINES 87-92

.. code-block:: default

    try:
        control.send("process_order")
    except StateMachine.TransitionNotAllowed as err:
        print(err)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Can't process_order when in Waiting for payment.




.. GENERATED FROM PYTHON SOURCE LINES 93-96

.. code-block:: default


    control





.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    OrderControl(model=<__main__.Order object at 0x74e76af0>, state_field='state', current_state='waiting_for_payment')



.. GENERATED FROM PYTHON SOURCE LINES 97-98

Now paying the left amount, we can proceed.

.. GENERATED FROM PYTHON SOURCE LINES 98-101

.. code-block:: default


    control.send("receive_payment", 6)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    [4, 6]



.. GENERATED FROM PYTHON SOURCE LINES 102-105

.. code-block:: default


    control





.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    OrderControl(model=<__main__.Order object at 0x74e76af0>, state_field='state', current_state='processing')



.. GENERATED FROM PYTHON SOURCE LINES 106-109

.. code-block:: default


    control.send("process_order")








.. GENERATED FROM PYTHON SOURCE LINES 110-113

.. code-block:: default


    control





.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    OrderControl(model=<__main__.Order object at 0x74e76af0>, state_field='state', current_state='shipping')



.. GENERATED FROM PYTHON SOURCE LINES 114-117

.. code-block:: default


    control.send("ship_order")








.. GENERATED FROM PYTHON SOURCE LINES 118-119

Just checking the final expected state

.. GENERATED FROM PYTHON SOURCE LINES 119-122

.. code-block:: default


    order.order_total





.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    10



.. GENERATED FROM PYTHON SOURCE LINES 123-126

.. code-block:: default


    order.payments





.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    [4, 6]



.. GENERATED FROM PYTHON SOURCE LINES 127-130

.. code-block:: default


    control.completed.is_active





.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    True



.. GENERATED FROM PYTHON SOURCE LINES 131-135

.. code-block:: default


    control






.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    OrderControl(model=<__main__.Order object at 0x74e76af0>, state_field='state', current_state='completed')



.. GENERATED FROM PYTHON SOURCE LINES 136-139

.. code-block:: default

    assert order.order_total == 10
    assert order.payments == [4, 6]
    assert control.completed.is_active








.. _sphx_glr_download_auto_examples_order_control_rich_model_machine.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: order_control_rich_model_machine.py <order_control_rich_model_machine.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: order_control_rich_model_machine.ipynb <order_control_rich_model_machine.ipynb>`
