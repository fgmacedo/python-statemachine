on:
  push:
    tags: [ 'v?*.*.*' ]
name: release

jobs:
  pypi-publish:
    name: upload release to PyPI
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.12"]

        # Specifying a GitHub environment is optional, but strongly encouraged
    environment: release
    permissions:
      # IMPORTANT: this permission is mandatory for trusted publishing
      id-token: write
    steps:
    - uses: actions/checkout@v3
    - run: git fetch origin develop
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Setup Graphviz
      uses: ts-graphviz/setup-graphviz@v1
    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        version: 1.5.1
        virtualenvs-create: true
        virtualenvs-in-project: true
        installer-parallel: true
    - name: Load cached venv
      id: cached-poetry-dependencies
      uses: actions/cache@v3
      with:
        path: .venv
        key: venv-${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('**/poetry.lock') }}
    - name: Install dependencies
      if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
      run: poetry install --no-interaction --no-root --all-extras
    - name: Test with pytest
      run: |
        source .venv/bin/activate
        pytest
    - name: Poetry build
      run: |
        source .venv/bin/activate
        poetry build
    - name: Publish package distributions to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
